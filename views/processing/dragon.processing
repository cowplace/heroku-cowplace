class Dragons extends Points {
  Dragons(int stage){
    generate(stage);
  }

  void generate(int stage){
    create(stage);
    Point tmp = entries;
    entries = new ArrayList();
    int length = tmp.size();
    float max_x=0;
    float min_x=width;
    float max_y=0;
    float min_y=height;
    Point p;
    for(int i=0;i<length;i++){
      p = tmp.get(i);
      if(p.x > max_x){
        max_x = p.x;
      }
      if(p.x < min_x){
        min_x = p.x;
      }
      if(p.y > max_y){
        max_y = p.y;
      }
      if(p.y < min_y){
        min_y = p.y;
      }
    }
    float dx = max_x - min_x;
    float dy = max_y - min_y;
    for(int i=0;i<length;i++){
      p = tmp.get(i);
      if (dx > dy){
        add_entry(
          (p.x - min_x) * width / dx,
          (p.y - min_y) * height / dy
        );
      } else {
        add_entry(
          (p.y - min_y) * width / dy,
          (p.x - min_x) * height / dx
        );
      }
    }
  }

  void create(int stage){
    entries = new ArrayList();
    boolean is_right = new boolean[1 << stage];
    add_entry(0, 0);
    int p = 0;
    float dx = 0;
    float dy = 2;
    float D = 3;
    add_entry_relative(D * dx, D * dy);
    float dx1, dy1;
    for(int k=1;k<=stage;k++){
      is_right[p] = false;
      for(int i=0;i<=p;i++){
        if(is_right[p-i]){
          is_right[p+i] = false;
          dx1 = -dy;
          dy1 = dx;
        } else {
          is_right[p+i] = true;
          dx1 = dy;
          dy1 = -dx;
        }
        add_entry_relative(dx+dx1, dy+dy1);
        add_entry_relative(D*dx1, D*dy1);
        dx=dx1;
        dy=dy1;
      }
      p = p*2+1;
    }
  }

  void add_entry_relative(float dx, float dy){
    Point last = entries.get(entries.size()-1);
    add_entry(last.x+dx, last.y+dy);
  }
}


int line_no;
int stage_no;
Lines lines;

void setup() {
  size(800, 400);
  line_no = 0;
  stage_no = 2;
  lines = new Lines(new Dragons(stage_no));
  background(255);
}

void draw() {
  if(line_no > lines.length){
    background(255);
    lines.generate(new Dragons(++stage_no));
    line_no = 0;
  }
  lines.draw(line_no);
  line_no++;
}
