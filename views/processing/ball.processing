class Ball {
  float x, y, vx, vy, mass;
  int r, g, b, radius;

  Ball () {
    x = random(width);
    y = random(height);
    r = random(255);
    g = random(255);
    b = random(255);
    radius = random(20) + 5;
    mass = sq(radius)/1000;
    vx = random(10) - 5;
    vy = random(10) - 5;
  }

  void show(){
    fill(r,g,b);
    stroke(r, g, b);
    ellipse(x,y,radius*2,radius*2);
  }

  void move() {
    x += vx;
    y += vy;
    vx *= 0.999;
    vy *= 0.999;
    checkCollisionWithWall();
  }

  void checkCollisionWithWall(){
    if (x - radius < 0){
      x = 0 + radius;
      vx *= -1.0;
    } else if (x + radius > width){
      x = width - radius;
      vx *= -1.0;
    }
    if (y - radius < 0){
      y = 0 + radius;
      vy *= -1.0;
    } else if (y + radius > height){
      y = height - radius;
      vy *= -1.0;
    }
  }

  void checkCollisionWithBall(Ball ball1){
    float dx = ball1.x - x;
    float dy = ball1.y - y;
    float dist = sqrt(sq(dx) + sq(dy));
    float minDist = radius + ball1.radius;
    if (dist < minDist){
      float cos = dx / dist;
      float sin = dy / dist;
      ball1.x = x + cos * minDist;
      ball1.y = y + sin * minDist;

      Point vel0 = rotate(vx, vy, sin, cos, true);
      Point vel1 = rotate(ball1.vx, ball1.vy, sin, cos, true);
      float vxTotal = vel0.x - vel1.x;
      vel0.x = ((mass - ball1.mass) * vel0.x + 2 * ball1.mass * vel1.x) / (mass + ball1.mass);
      vel1.x = vxTotal + vel0.x;
      Point vel0F = rotate(vel0.x, vel0.y, sin, cos, false);
      Point vel1F = rotate(vel1.x, vel1.y, sin, cos, false);
      vx = vel0F.x;
      vy = vel0F.y;
      ball1.vx = vel1F.x;
      ball1.vy = vel1F.y;
    }
  }

  Point rotate(float px, float py, float sin, float cos, bool reverse){
    Point result = new Point(0,0);
    if (reverse){
      result.x = px*cos+py*sin;
      result.y = py*cos-px*sin;
    } else {
      result.x = px*cos-py*sin;
      result.y = py*cos+px*sin;
    }
    return result;
  }
}

class Point {
  float x,y;
  Point (float px, float py){
    x = px;
    y = py;
  }
}
