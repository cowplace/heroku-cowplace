class SpringBall extends Ball {
  SpringBall() {
    super();
    xvel = 0;
    yvel = 0;
  }

  void spring(SpringBall ball1){
    float minDist = 150;
    float dx = ball1.x - x;
    float dy = ball1.y - y;
    float dist = sqrt(sq(dx) + sq(dy));
    float springArgument = 0.001 * (dist-minDist)/minDist;
    if (dist < minDist){
      stroke(0, 0, 0, (1-dist/minDist)*255);
      line(x,y,ball1.x,ball1.y);
      float ax = dx * springArgument;
      float ay = dy * springArgument;
      xvel += ax;
      yvel += ay;
      ball1.xvel -= ax;
      ball1.yvel -= ay;
    }
  }
}

SpringBall balls = new SpringBall[50];

void setup() {
  size(800, 400);
  for (int i = 0; i < balls.length; i ++){
    balls[i] = new SpringBall();
  }
}

void draw() {
  background(255);
  int numBalls = balls.length;
  SpringBall ball0;

  for (int i = 0; i < numBalls; i++){
    balls[i].move();
  }

  for (int i = 0; i < numBalls; i++){
    ball0 = balls[i];
    for (int j = i+1; j < numBalls; j++){
      ball0.spring(balls[j]);
    }
  }

  for (int i = 0; i < numBalls; i++){
      ball0 = balls[i];
      for (int j = i+1; j < numBalls; j++){
          ball0.checkCollisionWithBall(balls[j]);
      }
  }

  for (int i = 0; i < numBalls; i++){
    balls[i].show();
  }
}
